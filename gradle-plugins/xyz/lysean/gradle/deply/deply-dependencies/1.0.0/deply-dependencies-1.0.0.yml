versions:
  akka: "2.3.9"
  batch: "3.0.4.RELEASE"
  cglib: "3.2.0"
  frigga: "0.13"
  groovy: "2.3.11"
  guava: "18.0"
  hamcrest: "1.3"
  httpclient: "4.3.6"
  httpcore: "4.3.3"
  jackson: "2.5.3"
  jedis: "2.7.3"
  junit: "4.12"
  lombok: "1.16.4"
  okHttp: "2.7.0"
  redisEmbedded: "0.6"
  retrofit: "1.9.0"
  rxJava: "1.0.16"
  slf4j: "1.7.10"
  snappy: "1.1.1.6"
  spectaor: "0.33.0"
  spock: "1.0-groovy-2.3"
  spring: "4.1.7.RELEASE"
  springBoot: "1.2.5.RELEASE"
  springSecurity: "3.2.8.RELEASE"
  objenesis: "2.2"

groups:
  akka:
    compile:
      - akkaCore
      - akkaPersistence
    testCompile:
      - akkaActorTests
  bootWeb:
    compile:
      - bootActuator
      - bootWeb
      - bootDataRest
  jackson:
    compile:
      - jacksonCore
      - jacksonDatabind
      - jacksonAnnotations
  spockBase:
    testCompile:
      - spock
      - cglib
      - objenesis
  springBatch:
    compile:
      - batch
    testCompile:
      - batchTest
  retrofitDefault:
    compile:
      - retrofit
      - okHttp
      - okHttpUrlconnection
      - okHttpApache
      - retrofitJackson
    testCompile:
      - retrofitMock
  test:
    testCompile:
      - bootTest
      - spock
      - spockSpring
      - springTest
      - cglib
      - objenesis
      - junit
      - hamcrestCore
  lombok:
    compile:
      - lombok
    testCompile:
      - groovy
      - spock

dependencies:
  akkaCore: "com.typesafe.akka:akka-actor_2.11:${versions.akka}"
  akkaPersistence: "com.typesafe.akka:akka-persistence-experimental_2.11:${versions.akka}"
  akkaActorTests: "com.typesafe.akka:akka-actor-tests_2.11:${versions.akka}"
  archaiusCore: "com.netflix.archaius:archaius-core:${versions.archaius}"
  batch: "org.springframework.batch:spring-batch-core:${versions.batch}"
  batchTest: "org.springframework.batch:spring-batch-test:${versions.batch}"
  bootActuator: "org.springframework.boot:spring-boot-starter-actuator:${versions.springBoot}"
  bootAutoConfigure: "org.springframework.boot:spring-boot-autoconfigure:${versions.springBoot}"
  bootDataRest: "org.springframework.boot:spring-boot-starter-data-rest:${versions.springBoot}"
  bootTest: "org.springframework.boot:spring-boot-starter-test:${versions.springBoot}"
  bootWeb: "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}"
  springSecurityCore: "org.springframework.security:spring-security-core:${versions.springSecurity}"
  cglib: "cglib:cglib-nodep:${versions.cglib}"
  eurekaClient: "com.netflix.eureka:eureka-client:${versions.eureka}"
  frigga: "com.netflix.frigga:frigga:${versions.frigga}"
  groovy: "org.codehaus.groovy:groovy-all:${versions.groovy}"
  guava: "com.google.guava:guava:${versions.guava}"
  hamcrestCore: "org.hamcrest:hamcrest-core:${versions.hamcrest}"
  httpclient: "org.apache.httpcomponents:httpclient:${versions.httpclient}"
  httpcore: "org.apache.httpcomponents:httpcore:${versions.httpcore}"
  jacksonAnnotations: "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
  jacksonCore: "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
  jacksonDatabind: "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
  jacksonGuava: "com.fasterxml.jackson.datatype:jackson-datatype-guava:${versions.jackson}"
  jacksonJdk8: "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${versions.jackson}"
  jacksonJsr310: "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}"
  jacksonLombok: "com.xebia:jackson-lombok:1.0"
  jedis: "redis.clients:jedis:${versions.jedis}"
  junit: "junit:junit:${versions.junit}"
  lombok: "org.projectlombok:lombok:${versions.lombok}"
  objenesis: "org.objenesis:objenesis:${versions.objenesis}"
  okHttp: "com.squareup.okhttp:okhttp:${versions.okHttp}"
  okHttpUrlconnection: "com.squareup.okhttp:okhttp-urlconnection:${versions.okHttp}"
  okHttpApache: "com.squareup.okhttp:okhttp-apache:${versions.okHttp}"
  redisEmbedded: "com.github.kstyrc:embedded-redis:${versions.redisEmbedded}"
  retrofit: "com.squareup.retrofit:retrofit:${versions.retrofit}"
  retrofitJackson: "com.squareup.retrofit:converter-jackson:${versions.retrofit}"
  retrofitMock: "com.squareup.retrofit:retrofit-mock:${versions.retrofit}"
  rxJava: "io.reactivex:rxjava:${versions.rxJava}"
  spectatorApi: "com.netflix.spectator:spectator-api:${versions.spectator}"
  spectatorAws: "com.netflix.spectator:spectator-ext-aws:${versions.spectator}"
  spectatorGc: "com.netflix.spectator:spectator-ext-gc:${versions.spectator}"
  spectatorJvm: "com.netflix.spectator:spectator-ext-jvm:${versions.spectator}"
  slf4j: "org.slf4j:jcl-over-slf4j:${versions.slf4j}"
  slf4jApi: "org.slf4j:slf4j-api:${versions.slf4j}"
  slf4jSimple: "org.slf4j:slf4j-simple:${versions.slf4j}"
  snappy: "org.xerial.snappy:snappy-java:${versions.snappy}"
  spock: "org.spockframework:spock-core:${versions.spock}"
  spockSpring: "org.spockframework:spock-spring:${versions.spock}"
  springBeans: "org.springframework:spring-beans:${versions.spring}"
  springContext: "org.springframework:spring-context:${versions.spring}"
  springTest: "org.springframework:spring-test:${versions.spring}"
